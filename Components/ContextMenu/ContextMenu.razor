@namespace ReactiveBlazor

@inherits BaseComponent

<div @oncontextmenu:preventDefault
     @oncontextmenu="@OnContext"
     @onclick="@OnClick"
     role="contentinfo"
     class="context-menu">
    @if (Visibility)
    {
        <div style="@positionStyle"
             class="context-menu-content">
            @ChildContent
        </div>
    }
</div>

@code {

    [Parameter] public bool Click { get; set; }

    [Parameter] public bool Visibility { get; set; }

    [Parameter] public EventCallback<bool> VisibilityChanged { get; set; }

    private string positionStyle { get; set; } = string.Empty;

    private void OnContext(MouseEventArgs args)
    {
        if (!Click)
        {
            SetVisibility(true);
            SetPositionStyle(args);
        }
        else
        {
            SetVisibility(false);
        }
    }

    private void OnClick(MouseEventArgs args)
    {
        if (Click)
        {
            SetVisibility(true);
            SetPositionStyle(args);
        }
        else
        {
            SetVisibility(false);
        }
    }

    private void SetPositionStyle(MouseEventArgs args)
    {
        positionStyle = $"left: {args.ClientX}px;top: {args.ClientY}px";
    }

    private void SetVisibility(bool value)
    {
        Visibility = value;
        VisibilityChanged.InvokeAsync(Visibility);
    }
}
